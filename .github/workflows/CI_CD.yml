name: CI-CD

on:
  push:
    branches: [ "master", "devops", "feature/*"]

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  CI:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: act10ns/slack@v2.0.0
      with:
        status: starting
        message: Starting CI....
      if: always()    

    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pushd application/
        python -m pip install --upgrade pip
        pip install -r pytest-requirments.txt

    - name: Build the Docker compose
      id: build
      run: |
        docker build ./application -t ${{ secrets.DOCKERHUB_USERNAME }}/protolio-todo:test
        docker compose -f application/docker-compose.yml up -d

    - name: Test with pytest
      id: test
      run: |
        sleep 5
        pytest application/

## Calculate Version only if on main
    - name: Bump version and push tag
      id: tag
      # Will be changed to master soon
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: anothrNick/github-tag-action@1.61.0
      env:
        GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
        WITH_V: false
        DEFAULT_BUMP: patch
        INITIAL_VERSION: 1.0.0
        DEFAULT_BRANCH: master

    - name: Login to Docker Hub
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Publish to Docker Hub
      id: publish
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/protolio-todo:test ${{ secrets.DOCKERHUB_USERNAME }}/protolio-todo:$(git describe --tags)
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/protolio-todo:$(git describe --tags)

    - name: Slack Notification
      uses: act10ns/slack@v2.0.0
      # send message even if the ci fails
      if: always()
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:

    - uses: act10ns/slack@v2.0.0
      with:
        status: starting
        message: Starting CD....
      if: always()    


    - uses: actions/checkout@v3
    - name: checkout charts repo
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: actions/checkout@v3
      with:
        repository: elior7557/protfolio_gitops
        ref: master
        token: ${{ secrets.API_GITHUB_TOKEN }}

    - name: change version and push change to gitops repo
      if: ${{ github.ref == 'refs/heads/master' }}
      id: gitops-action
      run: |
        cd application_chart
        new_tag=${{needs.CI.outputs.new_tag}}
        sed -i "s/tag:.*/tag: $new_tag/" values.yaml
        
        git config --global user.email "github@git.com"
        git config --global user.name "github actions"

        git status

        git add values.yaml
        git commit -m "new version | Git Hub Actions"
        git push origin master
      
    - name: Slack Notification
      # send message even if the ci fails
      if: (${{ github.ref == 'refs/heads/main'}} && always())
      uses: act10ns/slack@v2.0.0
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
     






 

    

    

    
